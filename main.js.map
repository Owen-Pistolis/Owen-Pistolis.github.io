{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/account/account.component.ts","./src/app/components/account/account.component.html","./src/app/components/admin-panel/admin-panel.component.ts","./src/app/components/admin-panel/admin-panel.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/how-to/how-to.component.ts","./src/app/components/how-to/how-to.component.html","./src/app/components/investors/investors.component.ts","./src/app/components/investors/investors.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/services/mysql.service.ts","./src/app/services/organization.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { OktaAuthGuard, OktaCallbackComponent } from '@okta/okta-angular';\nimport { AuthGuard } from '@auth0/auth0-angular';\nimport { InvestorsComponent } from './components/investors/investors.component';\nimport { AccountComponent } from './components/account/account.component';\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'investors', component: InvestorsComponent },\n  { path: 'account', component: AccountComponent, canActivate: [ AuthGuard ] },\n  { path: 'adminPanel', component: AdminPanelComponent },\n  { path: 'login/callback', component: OktaCallbackComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OktaAuthStateService } from '@okta/okta-angular';\nimport { oktaAuth } from './auth/okta-auth-config';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private router: Router, /*public authStateService: OktaAuthStateService*/ public auth: AuthService, private route: ActivatedRoute, private userService: UserService){}\n  title = 'paragon';\n  isAuthenticated$ = this.auth.isAuthenticated$;\n  loginFromPython = false;\n\n  ngOnInit(){\n    this.route.queryParams.subscribe(params => {\n      if (params['triggerLogin']) {\n        this.loginFromPython = true; // Set flag to indicate login is from Python\n        this.triggerPythonLogin();\n      }\n    });\n\n\n    // Detect when the user is authenticated\n\n    if (this.isAuthenticated$ && this.loginFromPython) {\n      //this.handlePostPythonLogin(); // Only call if login was triggered by Python app\n      this.loginFromPython = false; // Reset flag after handling post-login\n    }\n  }\n  goToHome(){\n\tthis.router.navigate(['/home'])\n  }\n  login(): void {\n    this.auth.loginWithRedirect()\n  }\n  logout(){\n    this.auth.logout();\n  }\n  swapLogo(event: MouseEvent){\n\n    const target = event.target as HTMLElement;\n    if(event.type === 'mouseenter'){\n      target.setAttribute(\"src\", \"../assets/orangeLogoNoBack.png\");\n    } else if (event.type === 'mouseleave'){\n\n      target.setAttribute(\"src\", \"../assets/whiteLogoNoBack.png\");\n    }\n\n  }\n  async triggerPythonLogin(): Promise<void> {\n    console.log(\"I got to the login attempt!\")\n\n    await this.auth.loginWithRedirect().toPromise();\n\n    try {\n      const token = await lastValueFrom(this.auth.idTokenClaims$)\n      console.log('Token: ' + token)\n    } catch (err) {\n      console.error(\"Error retrieving token: \", err)\n    }\n    \n  }\n  // handlePostPythonLogin(): void {\n  //   // Retrieve the token after successful login\n  //   var token = this.auth.getAccessTokenSilently()\n  //   const redirectUri = 'myapp://auth_callback';\n  //   if (token) {\n  //     // Redirect back to the desktop application with the token\n  //     window.location.href = `${redirectUri}?token=${token}`;\n  //   }else{\n    \n  //     console.error('Error fetching access token:');\n  //   }\n  // }\n\n  // async triggerPythonLogin() {\n  //   console.log(\"I got to the login attempt!\")\n  //   const loginLink = document.getElementById('loginLink') as HTMLAnchorElement\n  //   if(loginLink){\n  //     loginLink.click();\n  //   }\n\n  //   const token = await lastValueFrom(this.auth.idTokenClaims$)\n  //   console.log('Token: ' + token)\n  // }\n}\n","<div class=\"navbar\">\n  <div class=\"logo\">\n    <img (mouseenter)=\"swapLogo($event)\" (mouseleave)=\"swapLogo($event)\" src=\"../assets/whiteLogoNoBack.png\" (click)=\"goToHome()\">\n  </div>\n  <ul class=\"nav-links\">\n    <li><a routerLink=\"/home\">Home</a></li>\n    <li><a routerLink=\"/about\">About</a></li>\n    <li><a routerLink=\"/howTo\">How To</a></li>\n    <li><a routerLink=\"/investors\">Investors</a></li>\n\t<li *ngIf=\"isAuthenticated$ | async\"><a routerLink=\"/account\">Account</a></li>\n  </ul>\n  <div *ngIf=\"!(isAuthenticated$ | async)\">\n\t<ul class=\"nav-links\" id=\"login\">\n\t  <li><a id=\"loginLink\" (click)=\"login()\">Login</a></li>\n\t</ul>\n  </div>\n  <div *ngIf=\"isAuthenticated$ | async\">\n\t<ul class=\"nav-links\" id=\"logout\">\n\t  <li><a (click)=\"logout()\">Logout</a></li>\n\t</ul>\t\n  </div>\n</div>\n\n\t<router-outlet>\n\t\t\n\t</router-outlet>\n\n<footer class=\"footer\">\n  <div class=\"footer-content\">\n    <div class=\"footer-links\">\n      <a href=\"#about\">About Us</a>\n      <a href=\"#services\">Services</a>\n      <a href=\"#contact\">Contact</a>\n      <a href=\"#privacy\">Privacy Policy</a>\n    </div>\n    <div class=\"footer-social\">\n      <a href=\"#\" aria-label=\"Facebook\">Facebook</a>\n      <a href=\"#\" aria-label=\"Twitter\">Twitter</a>\n      <a href=\"#\" aria-label=\"Instagram\">Instagram</a>\n    </div>\n  </div>\n  <div class=\"footer-bottom\">\n    <p>&copy; Paragon AI. All Rights Reserved.</p>\n  </div>\n</footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\nimport { OktaAuthModule, OKTA_CONFIG } from '@okta/okta-angular';\nimport { oktaAuth } from './auth/okta-auth-config';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InvestorsComponent } from './components/investors/investors.component';\nimport { provideAuth0, AuthModule} from '@auth0/auth0-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptors, withInterceptorsFromDi } from '@angular/common/http';\nimport { AuthInterceptor } from './auth/auth-interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    HowToComponent,\n    PageNotFoundComponent,\n    InvestorsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    //OktaAuthModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthModule.forRoot({\n      domain: 'dev-5oqrhjyxiuhwflbd.us.auth0.com',\n      clientId: 'NbXsZlJZKqbNjgg91ECHOHEZfKGhhVdr',\n      authorizationParams: {\n        redirect_uri: window.location.origin,\n        audience: 'https://dev-5oqrhjyxiuhwflbd.us.auth0.com/api/v2/'\n      }\n    })\n  ],\n  providers: [/*{ provide: OKTA_CONFIG, useValue: { oktaAuth } }*/ provideAnimationsAsync(), provideHttpClient(withInterceptorsFromDi()), { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private auth: AuthService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Only add an Authorization header if a token is available\n    return from(this.auth.getAccessTokenSilently()).pipe(\n      switchMap(token => {\n        // Clone the request and add the Authorization header if the token is available\n        if (token) {\n          console.log(\"I got the Token!\")\n          const cloned = req.clone({\n            setHeaders: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          return next.handle(cloned);\n        }\n        console.log(\"I didn't get the token!\")\n        // If no token is available, pass the original request through\n        return next.handle(req);\n      })\n    );\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"aboutDiv\">\n        <h2>About Paragon AI</h2>\n        <p>Paragon is an avant-garde software solution meticulously crafted to amplify efficiency and productivity by seamlessly monitoring, analyzing, and automating computer activities.\n            As a trailblazer in micro-process automation, Paragon leverages cutting-edge AI, process & task mining, and cloud technologies to metamorphose user activities into automated workflows, heralding a paradigm shift in digital workflow automation.</p>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  standalone: true,\n  imports: [],\n  templateUrl: './account.component.html',\n  styleUrl: './account.component.scss'\n})\nexport class AccountComponent {\n\n}\n","<p>account works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatExpansionModule} from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatLabel, MatFormField, MatInputModule } from '@angular/material/input'\nimport { MatCheckbox } from '@angular/material/checkbox'\nimport { User } from 'src/app/types/user';\nimport { MysqlService } from 'src/app/services/mysql.service';\n\n@Component({\n  selector: 'app-admin-panel',\n  standalone: true,\n  imports: [ReactiveFormsModule, MatExpansionModule, MatFormFieldModule, MatInputModule, MatLabel, MatFormField, MatCheckbox],\n  templateUrl: './admin-panel.component.html',\n  styleUrl: './admin-panel.component.scss'\n})\nexport class AdminPanelComponent implements OnInit {\n\n  addUser: FormGroup = this.fb.group({\n    email: ['', [Validators.required, Validators.minLength(7), Validators.maxLength(30), Validators.email]],\n    firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]],\n    lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]],\n    organization: ['', []],\n    isManager: [false],\n    isAdmin: [false],\n    isOwner: [false],\n\n  });\n\n  addOrganization: FormGroup = this.fb.group({\n    name: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(40)]],\n    organizatoinManagerID: ['']\n  })\n\n  constructor(private fb: FormBuilder, private mysql: MysqlService){\n\n  }\n\n  ngOnInit(): void {\n\n  }\n  submitUser(){\n\n    var user: User = {\n\n      id: \"\",\n      email: this.addUser.controls['email'].value,\n      firstName: this.addUser.controls['firstName'].value,\n      lastName: this.addUser.controls['lastName'].value,\n      organization: this.addUser.controls['organization'].value,\n      organizationID: \"\",\n      isManager: this.addUser.controls['isManager'].value,\n      isAdmin: this.addUser.controls['isAdmin'].value,\n      isOwner: this.addUser.controls['isOwner'].value\n    }\n\n    var userObject = { ID: user.id, Email: user.email, FirstName: user.firstName, LastName: user.lastName, Organization: null, OrganizationID: user.organizationID, IsManager: user.isManager, IsAdmin: user.isAdmin, IsOwner: user.isOwner }\n\n    this.mysql.getUserAPI().addUser(userObject)\n  }\n  submitOrganization(){\n\n  }\n\n}\n\n\n","<!--Organization Form -->\n\n\n<!-- User Form -->\n  <div>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>Add User Form</mat-panel-title>\n      </mat-expansion-panel-header>\n      <form [formGroup]=\"addUser\" (ngSubmit)=\"submitUser()\">\n        <table>\n          <tr>\n            <td>\n              <mat-form-field>\n                <mat-label for=\"email\">Email</mat-label>\n                <input matInput type=\"email\" id=\"email\" name=\"email\" formControlName=\"email\">\n              </mat-form-field>\n            </td>\n            <td>\n              <mat-form-field>\n                <mat-label >Organization</mat-label>\n                <input matInput type=\"text\" name=\"organization\" formControlName=\"organization\">\n              </mat-form-field>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <input matInput type=\"text\" name=\"firstName\" formControlName=\"firstName\">\n              </mat-form-field>\n            </td>\n            <td>\n              <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <input matInput type=\"text\" name=\"lastName\" formControlName=\"lastName\">\n              </mat-form-field>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label>Manager?</mat-label>\n              <mat-checkbox name=\"isManager\" formControlName=\"isManager\"></mat-checkbox>\n            </td>\n            <td>\n              <mat-label>Admin?</mat-label>\n              <mat-checkbox name=\"isAdmin\" formControlName=\"isAdmin\"></mat-checkbox>\n            </td>\n            <td>\n              <mat-label>Owner?</mat-label>\n              <mat-checkbox name=\"isOwner\" formControlName=\"isOwner\"></mat-checkbox>\n            </td>\n          </tr>\n        </table>\n        \n        <button [disabled]=\"addUser.invalid\" type=\"submit\">Add User</button>\n      </form>\n    </mat-expansion-panel>\n\n    <!-- <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>Add Organization Form</mat-panel-title>\n      </mat-expansion-panel-header>\n      <form [formGroup]=\"addOrganization\" (ngSubmit)=\"submitOrganization()\">\n        <table>\n          <tr>\n            <td>\n              <mat-form-field>\n                <mat-label>Name</mat-label>\n                <input matInput type=\"text\" name=\"name\" formControlName=\"name\">\n              </mat-form-field>\n            </td>\n            <td>\n              <mat-form-field>\n                <mat-label >Organization Manager</mat-label>\n                <input matInput type=\"text\" name=\"organizationManager\" formControlName=\"organizationManager\">\n              </mat-form-field>\n            </td>\n          </tr>\n        </table>\n        \n        <button [disabled]=\"addOrganization.invalid\" type=\"submit\">Add Organization</button>\n      </form>\n    </mat-expansion-panel> -->\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.scss']\n})\nexport class HowToComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>how-to works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-investors',\n  templateUrl: './investors.component.html',\n  styleUrls: ['./investors.component.scss']\n})\nexport class InvestorsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>investors works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserService } from './user.service';\nimport { OrganizationService } from './organization.service';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MysqlService {\n\n  private UserAPI: UserService;\n  private OrganizationAPI: OrganizationService;\n\n  constructor(private http: HttpClient, private auth: AuthService) {\n    this.UserAPI = new UserService(http, this, auth);\n    this.OrganizationAPI = new OrganizationService(http, this);\n   }\n\n   getUserAPI():UserService {\n    return this.UserAPI;\n   }\n   getOrganizationAPI():OrganizationService {\n    return this.OrganizationAPI;\n   }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MysqlService } from './mysql.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganizationService {\n\n  constructor(private http: HttpClient, private mysql: MysqlService) { }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { MysqlService } from './mysql.service';\nimport { User } from '../types/user';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService implements OnInit {\n\n  constructor(private http: HttpClient, private mysql: MysqlService, private auth: AuthService) { }\n  private user$!: Observable<any>;\n  private userInfoSubject = new BehaviorSubject<any>(null);\n\n  userInfo$ = this.userInfoSubject.asObservable();\n\n  ngOnInit(): void {\n    this.user$ = this.auth.user$;\n  }\n\n  public addUser(user: Object){\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\"\n    });\n    console.log(user);\n    this.http.post(environment.APIURL + \"/Users/addUser\", user, {headers:headers}).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: error => {\n        console.error(error)\n      }\n    });\n  }\n\n  public getUser(): Observable<User> | undefined {\n    const email = this.getEmail();\n    if (!email) {\n      console.log(\"Email not found!\");\n      return undefined;\n    }\n    return this.http.get<User>(environment.APIURL + \"/Users/\" + email);\n  }\n\n  public getEmail(){\n    return this.user$ ? this.user$.subscribe(user => user?.email) : null;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  APIURL: \"http://localhost:5211/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HomeComponent","PageNotFoundComponent","AboutComponent","HowToComponent","OktaCallbackComponent","AuthGuard","InvestorsComponent","AccountComponent","AdminPanelComponent","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","i1","exports","lastValueFrom","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_div_18_Template_a_click_3_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","login","AppComponent_div_20_Template_a_click_3_listener","_r3","logout","AppComponent","constructor","router","auth","route","userService","title","isAuthenticated$","loginFromPython","ngOnInit","queryParams","subscribe","params","triggerPythonLogin","goToHome","navigate","loginWithRedirect","swapLogo","event","target","type","setAttribute","_this","_asyncToGenerator","console","log","toPromise","token","idTokenClaims$","err","error","ɵɵdirectiveInject","Router","i2","AuthService","ActivatedRoute","i3","UserService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_img_mouseenter_2_listener","$event","AppComponent_Template_img_mouseleave_2_listener","AppComponent_Template_img_click_2_listener","ɵɵtemplate","AppComponent_li_16_Template","AppComponent_div_18_Template","AppComponent_div_20_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","BrowserModule","BrowserAnimationsModule","AuthModule","FormsModule","ReactiveFormsModule","provideAnimationsAsync","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","AuthInterceptor","AppModule","bootstrap","provide","useClass","multi","domain","clientId","authorizationParams","redirect_uri","window","location","origin","audience","declarations","from","switchMap","intercept","req","next","getAccessTokenSilently","pipe","cloned","clone","setHeaders","Authorization","handle","ɵɵinject","factory","ɵfac","AboutComponent_Template","standalone","features","ɵɵStandaloneFeature","AccountComponent_Template","Validators","MatExpansionModule","MatFormFieldModule","MatInputModule","MatCheckbox","fb","mysql","addUser","group","email","required","minLength","maxLength","firstName","lastName","organization","isManager","isAdmin","isOwner","addOrganization","name","organizatoinManagerID","submitUser","user","id","controls","value","organizationID","userObject","ID","Email","FirstName","LastName","Organization","OrganizationID","IsManager","IsAdmin","IsOwner","getUserAPI","submitOrganization","FormBuilder","MysqlService","AdminPanelComponent_Template","AdminPanelComponent_Template_form_ngSubmit_5_listener","invalid","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","i4","MatFormField","MatLabel","i5","MatInput","styles","HomeComponent_Template","HowToComponent_Template","InvestorsComponent_Template","PageNotFoundComponent_Template","OrganizationService","http","UserAPI","OrganizationAPI","getOrganizationAPI","HttpClient","providedIn","HttpHeaders","environment","BehaviorSubject","userInfoSubject","userInfo$","asObservable","user$","headers","post","APIURL","data","getUser","getEmail","undefined","get","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}